{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseURL","service","getAll","axios","get","then","res","data","create","newObject","post","update","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","resNotes","notesToShow","filter","map","find","changedNote","resNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"gMAYeA,MAVf,YAA2C,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,iBACdC,EAAQF,EAAKG,UAAY,mBAAqB,iBAEpD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QADR,IACiB,wBAAQC,QAASL,EAAjB,SAAoCC,QCO1CK,MAZf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKJ,UAAU,QAAf,SACGI,KCQQC,MAff,WAOE,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,sG,gBCVAC,EAAU,aAiBhB,IAEeC,EAFD,CAAEC,OAfhB,WAEE,OADYC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAaLC,OAVxB,SAAgBC,GAEd,OADYN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAQGI,OALhC,SAAgBC,EAAIH,GAElB,OADYN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UC2EdO,MAnFf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAGAC,qBAAU,WACRC,EACGvB,SACAG,MAAK,SAAAqB,GACJT,EAASS,QAEV,IA0CL,IAAMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAA1C,GAAI,OAAIA,EAAKG,aAEhE,OACE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAAS4B,IACvB,8BACE,yBAAQ9B,QAAS,kBAAM6B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAAA3C,GAAI,OACnB,cAAC,EAAD,CACMA,KAAMA,EACNC,iBAAkB,kBArChC,SAA4ByB,GAC1B,IAAM1B,EAAO8B,EAAMc,MAAK,SAAA5C,GAAI,OAAIA,EAAK0B,KAAOA,KACtCmB,EAAW,2BAAQ7C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDoC,EACGd,OAAOC,EAAImB,GACX1B,MAAK,SAAA2B,GACJf,EAASD,EAAMa,KAAI,SAAA3C,GAAI,OAAIA,EAAK0B,KAAOA,EAAK1B,EAAO8C,SAEpDC,OAAM,SAAAC,GACLX,EAAgB,aAAD,OAAcrC,EAAKK,QAAnB,sCACf4C,YAAW,kBAAMZ,EAAgB,QAAO,KACxCN,EAASD,EAAMY,QAAO,SAAA1C,GAAI,OAAIA,EAAK0B,KAAOA,SAyBVwB,CAAmBlD,EAAK0B,MAF3C1B,EAAK0B,SAKpB,uBAAMyB,SAzDV,SAAiBC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBjD,QAAS2B,EACTuB,MAAM,IAAIC,MAAOC,cACjBtD,UAAWuD,KAAKC,OAAS,IAG3BpB,EACGjB,OAAOgC,GACPnC,MAAK,SAAA2B,GACJf,EAASD,EAAM8B,OAAOd,IACtBb,EAAW,QA6Cb,UACE,uBAAO4B,MAAO7B,EACP8B,SAzBb,SAA0BV,GACxBnB,EAAWmB,EAAMW,OAAOF,UAyBpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MCjFNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d1ffe8c8.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Note({ note, toggleImportance }) {\n  const label = note.important ? \"make unimportant\" : \"make important\";\n\n  return (\n    <li className=\"note\">\n      {note.content} <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n}\n\nexport default Note;","import React from \"react\";\n\nfunction Notification({ message }) {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import React from \"react\";\n\nfunction Footer() {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki</em>\n    </div>\n  );\n}\n\nexport default Footer;","import axios from \"axios\";\n\nconst baseURL = \"/api/notes\";\n\nfunction getAll() {\n  const req = axios.get(baseURL);\n  return req.then(res => res.data);\n}\n\nfunction create(newObject) {\n  const req = axios.post(baseURL, newObject);\n  return req.then(res => res.data);\n}\n\nfunction update(id, newObject) {\n  const req = axios.put(`${baseURL}/${id}`, newObject);\n  return req.then(res => res.data);\n}\n\nlet service = { getAll, create, update };\n\nexport default service;","import React, { useEffect, useState } from 'react';\n\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\n\nimport noteService from \"./services/notes\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(resNotes => {\n        setNotes(resNotes);\n      }) \n    }, []);\n\n\n  function addNote(event) {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random < 0.5\n    };\n\n    noteService\n      .create(noteObject)\n      .then(resNote => {\n        setNotes(notes.concat(resNote));\n        setNewNote(\"\");    \n      });\n  }\n\n\n  function toggleImportanceOf(id) {\n    const note = notes.find(note => note.id === id);\n    const changedNote = { ...note, important: !note.important};\n\n    noteService\n      .update(id, changedNote)\n      .then(resNote => {\n        setNotes(notes.map(note => note.id !== id ? note : resNote));\n      })\n      .catch(error => {\n        setErrorMessage(`The note '${note.content}' was already deleted from server`);\n        setTimeout(() => setErrorMessage(null), 5000);\n        setNotes(notes.filter(note => note.id !== id));\n      });\n  }\n\n\n  function handleNoteChange(event) {\n    setNewNote(event.target.value);\n  }\n\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note key={note.id}\n                note={note} \n                toggleImportance={() => toggleImportanceOf(note.id)}/>\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote}\n               onChange={handleNoteChange}/>\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}